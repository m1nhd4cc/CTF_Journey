file guessme.py import từ secp256k1.py và các thư viện khác để làm việc với elliptic curves và Schnorr proof.

Hàm gen_publickey(a, gen_proof=False) dùng để sinh ra một "public key" và "Schnorr proof". Nếu gen_proof=True, hàm sẽ tạo thêm một bằng chứng Schnorr dựa trên một số ngẫu nhiên.

Chứng minh Schnorr bao gồm cặp giá trị (R, z), nơi R là một điểm trên đường cong elliptic và z là một giá trị tính toán từ public key và một số ngẫu nhiên.

File này cũng có logic để kiểm tra bằng chứng Schnorr (verify_publickey) và cho phép người dùng cung cấp public key cùng với bằng chứng Schnorr thông qua JSON.


File secp256k1.py:

File này triển khai các hàm liên quan đến elliptic curves, bao gồm cả việc tính toán và kiểm tra các chữ ký điện tử dựa trên đường cong secp256k1.

Nó cung cấp các hàm như ecdsa_raw_sign và ecdsa_raw_recover để ký và phục hồi public key từ chữ ký.


Ý tưởng:
Khi kết nối với server, bạn cần gửi một public key và một Schnorr proof. Do đó, có thể sử dụng hàm gen_publickey trong file guessme.py để tạo public key và Schnorr proof, sau đó gửi chúng tới server theo định dạng JSON.

Dưới đây là một hướng đi:

Tạo một private key ngẫu nhiên.
Sử dụng hàm gen_publickey(a, gen_proof=True) để sinh public key và Schnorr proof.
Đóng gói public key và proof thành JSON và gửi cho server

--------------------------------------------------------------------------------------------





